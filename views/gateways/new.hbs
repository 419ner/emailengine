{{> gateways_header}}

<nav aria-label="breadcrumb" class="mt-4 mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/admin/gateways">SMTP Gateways</a></li>
        <li class="breadcrumb-item active" aria-current="page">New</li>
    </ol>
</nav>

<form method="post" action="/admin/gateways/new">
    <input type="hidden" name="crumb" value="{{crumb}}">

    <div class="card mb-4">

        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">SMTP Gateway</h6>
        </div>

        <div class="card-body">

            <div class="form-group">
                <label for="gateway">ID</label>
                <input type="text" class="form-control {{#if errors.gateway}}is-invalid{{/if}}" id="smtp_auth_user"
                    name="gateway" value="{{values.gateway}}" placeholder="For example &quot;sendgun&quot;"
                    data-lpignore="true" autocomplete="off" />
                {{#if errors.gateway}}
                <span class="invalid-feedback">{{errors.gateway}}</span>
                {{/if}}
                <small class="form-text text-muted">Optional gateway ID. Autogenerated if not set.</small>
            </div>

            <div class="form-group">
                <label for="name">Gateway Name</label>
                <input type="text" class="form-control basicAutoComplete {{#if errors.name}}is-invalid{{/if}}" id="name"
                    name="name" value="{{values.name}}"
                    placeholder="For example &quot;Transactional Sendgun Account&quot;" data-lpignore="true"
                    autocomplete="off" required />
                {{#if errors.name}}
                <span class="invalid-feedback">{{errors.name}}</span>
                {{/if}}
                <small class="form-text text-muted">Name of the gateway</small>
            </div>

            <div class="form-group">
                <label for="smtp_auth_user">Username</label>
                <input type="text" class="form-control {{#if errors.smtp_user}}is-invalid{{/if}}" id="smtp_user"
                    name="smtp_auth_user" value="{{values.smtp_user}}" data-lpignore="true" autocomplete="off" />
                {{#if errors.smtp_user}}
                <span class="invalid-feedback">{{errors.smtp_user}}</span>
                {{/if}}
                <small class="form-text text-muted">Authentication username for this gateway</small>
            </div>

            <div class="form-group">
                <label for="smtp_auth_pass">Password</label>
                <input type="password" class="form-control {{#if errors.smtp_pass}}is-invalid{{/if}}" id="smtp_pass"
                    name="smtp_pass" value="{{values.smtp_pass}}" data-lpignore="true" autocomplete="off" {{#if
                    hasSMTPPass}} placeholder="Password is set but not shownâ€¦" {{/if}} />
                {{#if errors.smtp_pass}}
                <span class="invalid-feedback">{{errors.smtp_pass}}</span>
                {{/if}}
                <small class="form-text text-muted">Authentication password for this gateway</small>
            </div>

            <div class="form-group">
                <label for="smtp_host">Hostname</label>
                <input type="text" class="form-control {{#if errors.smtp_host}}is-invalid{{/if}}" data-lpignore="true"
                    autocomplete="off" id="smtp_host" name="smtp_host" value="{{values.smtp_host}}" required />
                {{#if errors.smtp_host}}
                <span class="invalid-feedback">{{errors.smtp_host}}</span>
                {{/if}}
                <small class="form-text text-muted">SMTP gateway hostname</small>
            </div>

            <div class="form-group">
                <label for="smtp_port">Port</label>
                <input type="number" class="form-control {{#if errors.smtp_port}}is-invalid{{/if}}" data-lpignore="true"
                    autocomplete="off" id="smtp_port" name="smtp_port" value="{{values.smtp_port}}" required />
                {{#if errors.smtp_port}}
                <span class="invalid-feedback">{{errors.smtp_port}}</span>
                {{/if}}
                <small class="form-text text-muted">SMTP server port</small>
            </div>

            <div class="form-group form-check">
                <input type="checkbox" class="form-check-input {{#if errors.smtp_secure}}is-invalid{{/if}}"
                    data-target="header-list" id="smtp_secure" name="smtp_secure" {{#if
                    values.smtp_secure}}checked{{/if}} />
                <a class="float-right" href="#" tabindex="0" role="button" data-toggle="popover" data-trigger="hover"
                    data-title="TLS for SMTP"
                    data-content="TLS (also known as SSL) is usually only needed when using port 465. For other ports EmailEngine falls back to using STARTTLS based encryption."><i
                        class="fas fa-question-circle"></i></a>
                <label class="form-check-label" for="smtp_secure">Use TLS
                </label>
                {{#if errors.smtp_secure}}
                <span class="invalid-feedback">{{errors.smtp_secure}}</span>
                {{/if}}
            </div>

        </div>
    </div>

    <div class="mb-4">
        <button type="submit" class="btn btn-primary btn-icon-split">
            <span class="icon text-white-50">
                <i class="fas fa-paper-plane"></i>
            </span>
            <span class="text">Add Gateway</span>
        </button>
    </div>
</form>


<input type="hidden" id="wellKnownServices" value="{{wellKnownServices}}">
<script>
    document.addEventListener('DOMContentLoaded', () => {
        let wellKnownServices = JSON.parse(document.getElementById('wellKnownServices').value);

        for (let key of Object.keys(wellKnownServices)) {
            if (wellKnownServices[key].aliases) {
                for (let alias of wellKnownServices[key].aliases) {
                    wellKnownServices.push(Object.assign({}, wellKnownServices[key], { key: alias }))
                }
            }
        }

        $('.basicAutoComplete').autoComplete({
            resolver: 'custom',
            events: {
                search: function (query, callback) {
                    let matches = wellKnownServices.filter(a => a.key.toLowerCase().indexOf(query.toLowerCase().trim()) >= 0);
                    callback(matches.map(entry => entry.key))
                },
                typed: function (newValue, origJQElement) {
                    return newValue
                }
            },
            preventEnter: true,
            minLength: 1
        }).on('change', function (a) {
        }).on('autocomplete.select', function (e) {
            if (e && e.type === 'autocomplete') {
                let selectedValue = e.currentTarget && e.currentTarget.value || '';
                if (selectedValue) {
                    let entry = wellKnownServices.find(a => a.key.toLowerCase().trim() === selectedValue.toLowerCase().trim())
                    if (entry) {
                        for (let key of Object.keys(entry)) {
                            switch (key) {
                                case 'host':
                                    document.getElementById('smtp_host').value = entry[key];
                                    break;
                                case 'port':
                                    document.getElementById('smtp_port').value = entry[key];
                                    break;
                                case 'secure':
                                    document.getElementById('smtp_secure').checked = entry[key];
                                    break;
                            }

                        }
                    }
                }

            }
        });
    })
</script>