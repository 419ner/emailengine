<div class="d-sm-flex align-items-center justify-content-between mb-1">
    <h1 class="h3 mb-0 text-gray-800">
        <small><a href="/admin/accounts"><i class="fas fa-arrow-left fa-fw"></i></a></small> Registered accounts
    </h1>
</div>

<div class="mt-4">

    <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
        <div class="btn-group mr-2" role="group" aria-label="First group">


            <button type="button" class="btn btn-light">
                <i class="fas fa-user-edit fa-fw"></i> Edit
            </button>

            <button type="button" class="btn btn-light" data-toggle="modal" data-target="#deleteModal">
                <i class="fas fa-trash-alt fa-fw"></i> Delete
            </button>

            <button type="button" class="btn btn-light" id="request-reconnect">
                <i class="fas fa-sync-alt fa-fw" id="reconnect-icon"></i> Reconnect
            </button>

            <button type="button" class="btn btn-light">
                <i class="fas fa-cloud-download-alt fa-fw"></i> Logs
            </button>

        </div>
    </div>
</div>

<div class="mt-4 row">
    <div class="col-8">
        <dl class="row">

            {{#if account.account}}
            <dt class="col-sm-3">ID</dt>
            <dd class="col-sm-9">{{account.account}}</dd>
            {{/if}}

            {{#if account.name}}
            <dt class="col-sm-3">Name</dt>
            <dd class="col-sm-9">{{account.name}}</dd>
            {{/if}}

            {{#if account.email}}
            <dt class="col-sm-3">Email</dt>
            <dd class="col-sm-9">{{account.email}}</dd>
            {{/if}}

            <dt class="col-sm-3">Account type</dt>
            <dd class="col-sm-9">
                {{#if account.type.icon}}
                <i class="{{account.type.icon}} fa-fw"></i>
                {{/if}}

                {{account.type.name}}

                {{#if account.type.comment}}
                <span class="text-muted">({{account.type.comment}})</span>
                {{/if}}

            </dd>

            <dt class="col-sm-3">State</dt>
            <dd class="col-sm-9">
                <span class="badge badge-pill badge-{{account.stateLabel.type}} state-info"
                    data-account="{{account.account}}" style="cursor:default;" data-toggle="popover"
                    data-trigger="hover" {{#if account.stateLabel.error}}title="Connection error"
                    data-content="{{account.stateLabel.error}}" {{/if}}>

                    {{#if account.stateLabel.spinner}}
                    <i class="fas fa-spinner fa-spin fa-fw"></i>
                    {{/if}}

                    {{account.stateLabel.name}}</span>
            </dd>
        </dl>
    </div>
</div>

<div class="row">


    {{#if account.oauth2}}
    <div class="col-lg-6">


        <div class="card mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Oauth2</h6>
            </div>
            <div class="card-body">

                <dl class="row">

                    {{#if account.oauth2.provider}}
                    <dt class="col-sm-3">Provider</dt>
                    <dd class="col-sm-9">{{account.type.comment}}</dd>
                    {{/if}}

                    {{#if account.oauth2.auth.user}}
                    <dt class="col-sm-3">Username</dt>
                    <dd class="col-sm-9">{{account.oauth2.auth.user}}</dd>
                    {{/if}}

                    {{#if account.oauth2.scopes}}
                    <dt class="col-sm-3">Scopes</dt>
                    <dd class="col-sm-9">
                        <div>
                            {{#each account.oauth2.scopes}}
                            <div><code>{{this}}</code></div>
                            {{/each}}
                        </div>
                    </dd>
                    {{/if}}

                </dl>

            </div>
        </div>


    </div>
    {{/if}}



    {{#if account.imap}}
    <div class="col-lg-6">

        <div class="card mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">IMAP</h6>
            </div>
            <div class="card-body">

                <dl class="row">

                    {{#if account.imap.auth.user}}
                    <dt class="col-sm-3">Username</dt>
                    <dd class="col-sm-9">{{account.imap.auth.user}}</dd>
                    {{/if}}

                    {{#if account.imap.auth.pass}}
                    <dt class="col-sm-3">Password</dt>
                    <dd class="col-sm-9">*******</dd>
                    {{/if}}

                    {{#if account.imap.host}}
                    <dt class="col-sm-3">Hostname</dt>
                    <dd class="col-sm-9">{{account.imap.host}}</dd>
                    {{/if}}

                    {{#if account.imap.port}}
                    <dt class="col-sm-3">Port</dt>
                    <dd class="col-sm-9">{{account.imap.port}}</dd>
                    {{/if}}


                    <dt class="col-sm-3">TLS</dt>
                    <dd class="col-sm-9">{{#if account.imap.secure}}Yes{{else}}Uses STARTTLS if possible{{/if}}</dd>

                </dl>

            </div>
        </div>

    </div>
    {{/if}}





    {{#if account.smtp}}
    <div class="col-lg-6">

        <div class="card mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">SMTP</h6>
            </div>
            <div class="card-body">

                <dl class="row">

                    {{#if account.smtp.auth.user}}
                    <dt class="col-sm-3">Username</dt>
                    <dd class="col-sm-9">{{account.smtp.auth.user}}</dd>
                    {{/if}}

                    {{#if account.smtp.auth.pass}}
                    <dt class="col-sm-3">Password</dt>
                    <dd class="col-sm-9">*******</dd>
                    {{/if}}

                    {{#if account.smtp.host}}
                    <dt class="col-sm-3">Hostname</dt>
                    <dd class="col-sm-9">{{account.smtp.host}}</dd>
                    {{/if}}

                    {{#if account.smtp.port}}
                    <dt class="col-sm-3">Port</dt>
                    <dd class="col-sm-9">{{account.smtp.port}}</dd>
                    {{/if}}

                    <dt class="col-sm-3">TLS</dt>
                    <dd class="col-sm-9">{{#if account.smtp.secure}}Yes{{else}}Uses STARTTLS if possible{{/if}}</dd>
                </dl>

            </div>
        </div>

    </div>
    {{/if}}


</div>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete account</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the account for {{account.name}}? This action is not recoverable.</p>
            </div>
            <div class="modal-footer">
                <form method="post" action="/admin/accounts/{{account.account}}/delete">
                    <input type="hidden" name="crumb" value="{{crumb}}" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="account-id" value="{{account.account}}">
<input type="hidden" id="crumb" value="{{crumb}}">

<script>
    document.addEventListener('DOMContentLoaded', () => {

        const reconnectAccount = async () => {
            const account = document.getElementById('account-id').value.trim();

            const res = await fetch(`/admin/accounts/${account}/reconnect`, {
                method: 'post',
                headers: { 'content-type': 'application/json' },
                body: JSON.stringify({
                    crumb: document.getElementById('crumb').value
                })
            })
            if (!res.ok) {
                throw new Error(`HTTP error! status: ${res.status}`);
            }
            const data = await res.json();

            return data;
        }

        let reconnecting = false;
        const requestReconnectElm = document.getElementById('request-reconnect');
        requestReconnectElm.addEventListener('click', e => {
            e.preventDefault();
            if (requestReconnectElm.classList.contains('disabled')) {
                return;
            }

            if (reconnecting) {
                return
            }

            reconnecting = true;
            document.getElementById('reconnect-icon').classList.add('fa-spin');
            reconnectAccount().then(data => {
                document.getElementById('reconnect-icon').classList.remove('fa-spin');
                reconnecting = false;
                showToast(data.error ? data.error : (data.success ? 'Account reconnection requested' : 'Failed to request reconnect'), data.success ? 'check-circle' : 'alert-triangle');
            }).catch(err => {
                document.getElementById('reconnect-icon').classList.remove('fa-spin');
                reconnecting = false;
                showToast('Request failed\n' + err.message, 'alert-triangle');
            })
        });
    })
</script>