<div class="d-sm-flex align-items-center justify-content-between mb-1">
    <h1 class="h3 mb-0 text-gray-800">

        <small><i class="fas fa-server fa-fw"></i></small>
        SMTP Server
        <span class="badge badge-{{serverState.label.type}} state-info" data-type="smtp">
            {{#if serverState.label.spinner}}
            <i class="fas fa-spinner fa-spin fa-fw"></i>
            {{/if}}

            {{serverState.label.name}}</span>
    </h1>
</div>

<p class="mb-4">EmailEngine allows submitting email messages for delivery using the <a
        href="https://api.emailengine.app/#tag/submit" target="_blank">submission API
        endpoint</a> or the
    built-in SMTP server. On this page, you can configure the settings of the SMTP server.</p>

<form method="post" action="/admin/config/smtp">
    <input type="hidden" name="crumb" id="crumb" value="{{crumb}}" />

    <div class="card mt-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Server settings</h6>
        </div>
        <div class="card-body">
            <div class="form-group form-check">
                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">smtpServerEnabled</a>]
                </div>

                <input type="checkbox" class="form-check-input {{#if errors.smtpServerEnabled}}is-invalid{{/if}}"
                    id="smtpServerEnabled" name="smtpServerEnabled" {{#if values.smtpServerEnabled}}checked{{/if}} />
                <label class="form-check-label" for="smtpServerEnabled">Enable SMTP Server</label>
                {{#if errors.smtpServerEnabled}}
                <span class="invalid-feedback">{{errors.smtpServerEnabled}}</span>
                {{/if}}
            </div>

            <div class="form-group">
                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">smtpServerPort</a>]
                </div>

                <label for="smtpServerPort">SMTP port</label>

                <input type="number" class="form-control {{#if errors.smtpServerPort}}is-invalid{{/if}}"
                    id="smtpServerPort" name="smtpServerPort" value="{{values.smtpServerPort}}" />

                {{#if errors.smtpServerPort}}
                <span class="invalid-feedback">{{errors.smtpServerPort}}</span>
                {{/if}}
                <small class="form-text text-muted">The port number to bound to. Port numbers lower than 1024 might not
                    be allowed.</small>
            </div>

            <div class="form-group">
                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">smtpServerHost</a>]
                </div>

                <label for="smtpServerHost">SMTP host</label>

                <input type="text" class="form-control basicAutoComplete {{#if errors.smtpServerHost}}is-invalid{{/if}}"
                    id="smtpServerHost" name="smtpServerHost" value="{{values.smtpServerHost}}" data-lpignore="true"
                    autocomplete="off" />

                {{#if errors.smtpServerHost}}
                <span class="invalid-feedback">{{errors.smtpServerHost}}</span>
                {{/if}}
                <small class="form-text text-muted">IP address to bind to. Set to empty or use "0.0.0.0" to listen on
                    all interfaces.</small>
            </div>

            <div class="form-group form-check">
                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">smtpServerProxy</a>]
                </div>

                <input type="checkbox" class="form-check-input {{#if errors.smtpServerProxy}}is-invalid{{/if}}"
                    id="smtpServerProxy" name="smtpServerProxy" {{#if values.smtpServerProxy}}checked{{/if}} />
                <label class="form-check-label" for="smtpServerProxy">Enable PROXY protocol</label>
                {{#if errors.smtpServerProxy}}
                <span class="invalid-feedback">{{errors.smtpServerProxy}}</span>
                {{/if}}
                <small class="form-text text-muted">Use this if your SMTP server is proxied by HAProxy using the
                    <code>send-proxy</code> option.</small>
            </div>
        </div>
    </div>

    <div class="card mt-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Authentication settings</h6>
        </div>
        <div class="card-body">
            <div class="form-group form-check">
                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">smtpServerAuthEnabled</a>]
                </div>

                <input type="checkbox" class="form-check-input {{#if errors.smtpServerAuthEnabled}}is-invalid{{/if}}"
                    id="smtpServerAuthEnabled" name="smtpServerAuthEnabled" {{#if
                    values.smtpServerAuthEnabled}}checked{{/if}} />
                <label class="form-check-label" for="smtpServerAuthEnabled">Enable authentication</label>
                {{#if errors.smtpServerAuthEnabled}}
                <span class="invalid-feedback">{{errors.smtpServerAuthEnabled}}</span>
                {{/if}}
            </div>

            <div class="form-group">
                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">smtpServerPassword</a>]
                </div>

                <label for="smtpServerPassword">SMTP password</label>
                <div class="input-group">
                    <input type="password" class="form-control {{#if errors.smtpServerPassword}}is-invalid{{/if}}"
                        id="smtpServerPassword" name="smtpServerPassword" value="{{values.smtpServerPassword}}"
                        data-lpignore="true" autocomplete="off" />

                    <div class="input-group-append">
                        <button class="btn btn-outline-primary" type="button" id="showPassword"><i
                                class="fas fa-eye"></i></button>
                    </div>
                </div>

                {{#if errors.smtpServerPassword}}
                <span class="invalid-feedback">{{errors.smtpServerPassword}}</span>
                {{/if}}
                <small class="form-text text-muted">All SMTP accounts share the same password. Username is the account
                    Id.</small>
            </div>
        </div>

    </div>

    <div class="card mt-4 mb-4">
        <a href="#showHelp" class="d-block card-header py-3 collapsed" data-toggle="collapse" role="button"
            aria-expanded="true" aria-controls="showHelp">
            <h6 class="m-0 font-weight-bold text-primary">Authentication instructions</h6>
        </a>
        <div class="collapse" id="showHelp">
            <div class="card-body">
                <p>If authentication is <strong>enabled</strong> then SMTP username is the account ID you want to send
                    mail as.</p>

                <p>If authentication is <strong>disabled</strong>, then the all messages must include a special header
                    <code>X-EE-Account</code> that identifies the account to be used for sending.
                </p>
            </div>
        </div>
    </div>

    <div class="mb-4 mt-4">
        <button type="submit" class="btn btn-primary btn-icon-split">
            <span class="icon text-white-50">
                <i class="fas fa-cog"></i>
            </span>
            <span class="text">Update settings</span>
        </button>
    </div>

</form>

<input type="hidden" id="availableAddresses" value="{{availableAddresses}}">

<script>
    document.addEventListener('DOMContentLoaded', () => {

        let showBt = document.getElementById('showPassword');
        let serviceSecretElm = document.getElementById('smtpServerPassword');

        let showSecret = () => {
            let current = serviceSecretElm.getAttribute('type')
            serviceSecretElm.setAttribute('type', current === 'text' ? 'password' : 'text');
            showBt.blur()
        }

        showBt.addEventListener('click', showSecret);

        let availableAddresses = document.getElementById('availableAddresses').value.split(',').map(e => e.trim()).filter(e => e);
        $('.basicAutoComplete').autoComplete({
            resolver: 'custom',
            events: {
                search: function (query, callback) {
                    callback(availableAddresses.filter(a => a.indexOf(query) >= 0))
                }
            },
            preventEnter: true,
            minLength: 1
        });
    })
</script>